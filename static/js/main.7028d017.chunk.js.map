{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setnewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7028d017.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();","import React, { useState}from 'react'\r\nimport { authService } from 'fbase';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if(name === 'email') {\r\n            setEmail(value);\r\n        }else if(name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                // Create account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            }else {\r\n                //Log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            }\r\n            console.log(data);\r\n        }catch(error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"Submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign in\"}\r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n                <span onClick={toggleAccount} className=\"authSwitch\">\r\n                    {newAccount ? \"Sign in\" : \"Create Account\"}\r\n                </span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthForm\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {target:{ name}} = event;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n        />\r\n        <AuthForm />\r\n\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {dbService, storageService} from 'fbase';\r\nimport { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\r\n        if(ok) {\r\n            //delete nweet\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        })\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {target: { value }} = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <> \r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Edit your nweet\" \r\n                            value={newNweet} \r\n                            autoFocus\r\n                            required \r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form> \r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </span>\r\n                    </> \r\n                ) : (\r\n                    <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=\"\"/>}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService } from 'fbase';\r\nimport { dbService } from 'fbase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n        const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n        target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n        target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n        const {\r\n            currentTarget: { result },\r\n        } = finishedEvent;\r\n        setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                        backgroundImage: attachment,\r\n                        }}\r\n                        alt=\"\"\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import React, {useState, useEffect} from \"react\";\r\nimport Nweet from 'components/Nweet';\r\nimport {dbService} from 'fbase';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map(doc => ({id: doc.id, ...doc.data()}));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"container\">   \r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {\r\n                    nweets.map((nweet) => (\r\n                        <Nweet \r\n                            key={nweet.id} \r\n                            nweetObj={nweet} \r\n                            isOwner={nweet.creatorId === userObj.uid}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { authService } from 'fbase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {  useState } from 'react';\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setnewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n        refreshUser();\r\n    }\r\n\r\n    // const getMyNweets = async() => {\r\n    //     const nweets = await dbService\r\n    //         .collection(\"nweets\")\r\n    //         .where(\"creatorId\", \"==\", userObj.uid)\r\n    //         .get();\r\n    //     console.log(nweets.docs.map((doc) => doc.data()));\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     getMyNweets();\r\n    // }, []);\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value }} = event;\r\n        setnewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n        }\r\n        refreshUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Display name\" \r\n                    onChange={onChange} \r\n                    autoFocus\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }} \r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                        >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                            ? `${userObj.displayName} Profile`\r\n                            : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                        </Route>\r\n                    </div> \r\n                ): (\r\n                    <> \r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from 'components/Router';\nimport {authService} from 'fbase';\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userObj, setUserObj] = useState(false);\n    useEffect(() => {\n      authService.onAuthStateChanged((user) => {\n        if(user) {\n          setIsLoggedIn(true);\n          setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => {user.updateProfile(args)},\n          });\n        }else {\n          setUserObj(null);\n        }\n        setInit(true);\n      })\n    }, []);\n    const refreshUser = () => {\n      const user = authService.currentUser;\n      setUserObj({\n        displayName: user.displayName,\n        uid: user.uid,\n        updateProfile: (args) => {\n          user.updateProfile(args);\n        },\n      });\n    }\n  return (\n    <>\n    {init ? <AppRouter \n      refreshUser={refreshUser}\n      isLoggedIn={isLoggedIn} \n      userObj={userObj}\n      />\n      : \n      \"Initializing...\"}    \n    </>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}